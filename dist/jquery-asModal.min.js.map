{"version":3,"sources":["jquery-asModal.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsModalEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","support","el","document","createElement","transitions","transition","WebkitTransition","css3Support","t","hasOwnProperty","undefined","style","animationEnd","DEFAULTS","namespace","skin","content","overlay","closeElement","effect","overlaySpeed","effectFallback","focus","errorContent","loadingContent","closeByEscape","closeByOverlayClick","width","hieght","onOpen","onClose","ANIMATIONS","fade","moveIn","dtd","$content","animate","opacity","duration","complete","resolve","moveOut","asModal","element","options","$element","$container","$contentWrap","appendTo","metas","each","data","k","v","re","RegExp","test","toLowerCase","replace","extend","classes","container","contentWrap","error","open","animateActive","overlayEffect","loading","disabled","addClass","$overlay","isLoading","isError","isOpen","_init","value","attr","height","_bindEvents","_trigger","_this","on","proxy","hide","event","hasClass","close","_this2","Deferred","charAt","_showLoading","ajax","type","cache","url","then","html","reject","promise","off","$loading","remove","status","_this3","_hideLoading","keyCode","removeClass","_load","always","empty","_afterOpen","_this4","setTimeout","$input","isFunction","find","get","_animate","trigger","that","_afterClose","onComplete","call","_unbindeEvent","eventType","_len","arguments","params","Array","_key","concat"],"mappings":"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","file":"jquery-asModal.min.js","sourcesContent":["/**\n* jQuery asModal v0.3.2\n* https://github.com/amazingSurge/jquery-asModal\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nconst support = ((() => {\n  const el = document.createElement('fakeelement');\n\n  const transitions = {\n    transition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd'\n  };\n\n  let css3Support = false;\n  let transition;\n\n  // Check transition.\n  for (const t in transitions) {\n    if (transitions.hasOwnProperty(t) && el.style[t] !== undefined) {\n      transition = transitions[t];\n    }\n  }\n\n  if (transition) {\n    css3Support = true;\n  }\n  return {\n    css3Support,\n    animationEnd: transition\n  };\n}))();\n\nvar DEFAULTS = {\n  namespace: 'modal', // String: Prefix string attached to the class of every element generated by the plugin\n  skin: null, // set plugin skin\n\n  content: null, // Set the URL, ID or Class.\n  overlay: true, // Show the overlay.\n  closeElement: null, // Element ID or Class to close the modal\n  effect: 'fadeScale', // fadein | slide | newspaper | fall\n  overlaySpeed: 200, // Sets the speed of the overlay, in milliseconds\n  effectFallback: 'fade', // set default jquery animate when css3 animation doesn't support\n  focus: true, // set focus to form element in content\n  errorContent: 'sorry, ajax error.', // set ajax error content\n  loadingContent: 'loading...', // set loading content\n\n  closeByEscape: true, // Allow the user to close the modal by pressing 'ESC'.\n  closeByOverlayClick: true, // Allow the user to close the modal by clicking the overlay.\n\n  width: null, // Set a fixed total width.\n  hieght: null, // Set a fixed total height.\n\n  // Callback API\n  onOpen: null, // Callback: function() - Fires when the modal open\n  onClose: null // Callback: function() - Fires when the modal close\n  //onComplete: null // Callback: function() - Fires when the effect end\n};\n\nvar ANIMATIONS = {\n  fade: {\n    moveIn(instance, dtd) {\n      instance.$content.animate({\n        opacity: 1\n      }, {\n        duration: 400,\n        complete() {\n          dtd.resolve();\n        }\n      });\n\n    },\n    moveOut(instance, dtd) {\n\n      instance.$content.animate({\n        opacity: 0\n      }, {\n        duration: 400,\n        complete() {\n          dtd.resolve();\n        }\n      });\n    }\n  }\n};\n\nconst NAMESPACE$1 = 'asModal';\n\n\nclass asModal {\n  constructor(element, options) {\n    this.element = element;\n    this.$element = $(element);\n    this.$container = $('<div></div>');\n    this.$contentWrap = $('<div></div>').appendTo(this.$container);\n    this.$content = $('<div></div>').appendTo(this.$contentWrap);\n\n    // options\n    const metas = [];\n    $.each(this.$element.data(), (k, v) => {\n      const re = new RegExp(\"^modal\", \"i\");\n      if (re.test(k)) {\n        metas[k.toLowerCase().replace(re, '')] = v;\n      }\n    });\n\n    this.options = $.extend(true, {}, DEFAULTS, options, metas);\n    this.namespace = this.options.namespace;\n\n    // switch to jquery animate if not support\n    if (!support.css3Support) {\n      this.options.effect = this.options.effectFallback;\n    }\n\n    this.classes = {\n      overlay: `${this.namespace}-overlay`,\n      container: `${this.namespace}-container`,\n      content: `${this.namespace}-content`,\n      contentWrap: `${this.namespace}-contentWrap`,\n      skin: `${this.namespace}_${this.options.skin}`,\n      error: `${this.namespace}_error`,\n      open: `${this.namespace}_open`,\n      animateActive: `${this.namespace}_animateActive`,\n      effect: `${this.namespace}_${this.options.effect}`,\n      overlayEffect: `${this.namespace}_ovrelay_${this.options.effect}`,\n      loading: `${this.namespace}_loading`,\n      disabled: `${this.namespace}_disabled`\n    };\n\n    // skin\n    if (this.options.skin) {\n      this.$element.addClass(this.classes.skin);\n      this.$container.addClass(this.classes.skin);\n    }\n    this.$container.addClass(this.classes.container);\n    this.$contentWrap.addClass(this.classes.contentWrap);\n    this.$content.addClass(this.classes.content);\n\n    if (this.options.overlay) {\n      this.$overlay = $('<div></div>');\n      this.$overlay.addClass(this.classes.overlay);\n      if (this.options.skin) {\n        this.$overlay.addClass(this.classes.skin);\n      }\n    }\n\n    this.isLoading = false;\n    this.disabled = false;\n    this.isError = false;\n    this.isOpen = false;\n\n    this._init();\n  }\n\n  _init() {\n    // check element href\n    if (this.options.content === null) {\n      this.options.content = this.$element.attr('href');\n    }\n\n    // add animation effect\n    this.$contentWrap.addClass(this.classes.effect);\n    this.$overlay.addClass(this.classes.overlayEffect);\n\n    this.$container.appendTo('body');\n    this.$overlay.appendTo('body');\n\n    // set fixed width/height\n    if (this.options.width) {\n      this.$content.width(this.options.width);\n    }\n    if (this.options.height) {\n      this.$content.height(this.options.height);\n    }\n\n    this._bindEvents();\n\n    this._trigger('ready');\n  }\n\n  _bindEvents() {\n    if (this.options.closeElement) {\n      this.$contentWrap.on('click.modal', this.options.closeElement, $.proxy(this.hide, this));\n    }\n\n    this.$element.on('click.modal', () => {\n      if (!this.disabled) {\n        this.open();\n      }\n      return false;\n    });\n\n    if (this.options.closeByOverlayClick) {\n      // here not bind in this.$overlay because its zIndex is less then this.$container\n      this.$container.on('click.modal', event => {\n        /* eslint consistent-return: \"off\" */\n        if ($(event.target).hasClass(this.classes.container)) {\n          this.close();\n          return false;\n        }\n      });\n    }\n  }\n\n  _load() {\n    const dtd = $.Deferred();\n\n    if (this.options.content.charAt(0) === '#' || this.options.content.charAt(0) === '.') {\n      // element content\n      dtd.resolve($(this.options.content));\n    } else {\n      // loading for waiting ajax\n      this._showLoading();\n\n      // ajax\n      $.ajax({\n        type: 'get',\n        cache: true,\n        url: this.options.content\n      }).then(html => {\n        dtd.resolve($(html));\n      }, () => {\n        dtd.reject(this.options.errorContent);\n      });\n    }\n    return dtd.promise();\n  }\n\n  _unbindeEvent() {\n    $(document).off('keydown.modal');\n  }\n\n  _showLoading() {\n    this.$loading = $('<div></div>').html(this.options.loadingContent).addClass(this.classes.loading);\n    this.$loading.appendTo(this.$overlay);\n  }\n\n  _hideLoading() {\n    if (this.$loading) {\n      this.$loading.remove();\n      this.$loading = null;\n    }\n  }\n\n  _animate() {\n    const dtd = $.Deferred();\n\n    // keep consistant with css3 animateEnd event\n    // extend jquery animate in Modal.animations\n    if (!support.css3Support) {\n      ANIMATIONS[this.options.effectFallback][this.status](this, dtd);\n    } else {\n      // hand over control to css3 event\n      dtd.reject();\n    }\n    return dtd.promise();\n  }\n\n  open() {\n    if (this.isLoading) {\n      this._hideLoading();\n    }\n    if (this.options.overlay) {\n      this.$overlay.addClass(this.classes.open);\n      // overlay use jquery animation\n      this.$overlay.animate({\n        opacity: 1\n      }, {\n        duration: this.options.overlaySpeed\n      });\n    }\n\n    if (this.options.closeByEscape) {\n      $(document).on('keydown.modal', event => {\n        // any bugs for different browsers, find a better way\n        if (event.keyCode === 27) {\n          this.close();\n        }\n      });\n    }\n\n    if (this.content && !this.isError) {\n      // prevent reloading\n      this._afterOpen();\n      return;\n    }\n\n    // clear last open info before load\n    this.$content.removeClass(this.classes.error);\n\n    this._load().always(() => {\n      this._hideLoading();\n    }).then(content => {\n      this.content = content;\n      this.$content.empty().html(this.content);\n      this._afterOpen();\n    }, error => {\n      this.$content.addClass(this.classes.error);\n      this.isError = true;\n      this.content = error;\n      this.$content.empty().html(this.content);\n      this._afterOpen();\n    });\n  }\n\n  _afterOpen() {\n    if (this.options.focus) {\n      // make sure to excute after content show\n      setTimeout(() => {\n        const $input = $.isFunction(this.content.find) && this.content.find('input');\n        if ($input.length > 0) {\n          $input.get(0).focus();\n        }\n      }, 10);\n    }\n\n    // show container\n    this.$container.addClass(this.classes.open);\n\n    // active css3 comeIn animation , if browser doesn't support, just ignore it\n    // give some space for css3 animation\n    setTimeout(() => {\n      this.$contentWrap.addClass(this.classes.animateActive);\n    }, 0);\n\n    // for animation\n    this.status = 'moveIn';\n    this._animate().then(() => {\n      // trigger jquery animation end event manually\n      this.isOpen = true;\n      this.$content.trigger(this.animationEnd, this);\n    });\n  }\n\n  close() {\n    const that = this;\n\n    // for jquery animation\n    this.status = 'moveOut';\n\n    // css3 animationend event listener\n    this.$content.on(support.animationEnd, function() {\n      that._afterClose();\n      that.$content.off(that.animationEnd);\n      if (typeof that.options.onComplete === 'function') {\n        that.options.onComplete.call(this, this);\n      }\n\n      that.$container.trigger('modal::complete', this);\n      return false;\n    });\n\n    // overlay use jquery animation\n    this.$overlay.animate({\n      opacity: 0\n    }, {\n      duration: this.options.overlaySpeed,\n      complete() {\n        that.$overlay.removeClass(that.classes.open);\n      }\n    });\n\n    // active css3 comeOut animation\n    this.$contentWrap.removeClass(this.classes.animateActive);\n\n    this._animate().then(() => {\n      that._afterClose();\n    });\n  }\n\n  _afterClose() {\n    this._unbindeEvent();\n    this.$container.removeClass(this.classes.open);\n    this.isOpen = false;\n  }\n\n  enable() {\n    this.disabled = false;\n    this.$element.addClass(this.classes.disabled);\n\n    this._trigger('enable');\n  }\n\n  disable() {\n    this.disabled = true;\n    this.$element.removeClass(this.classes.disabled);\n\n    this._trigger('disable');\n  }\n\n  destroy() {\n    this.$element.off('click.modal');\n    this.$container.remove();\n    this.$overlay.remove();\n\n    this._trigger('destroy');\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.3.2'\n};\n\nconst NAMESPACE = 'asModal';\nconst OtherAsModal = $.fn.asModal;\n\nconst jQueryAsModal = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new asModal(this, options));\n    }\n  });\n};\n\n$.fn.asModal = jQueryAsModal;\n\n$.asModal = $.extend({\n  setDefaults: asModal.setDefaults,\n  noConflict: function() {\n    $.fn.asModal = OtherAsModal;\n    return jQueryAsModal;\n  }\n}, info);\n"]}